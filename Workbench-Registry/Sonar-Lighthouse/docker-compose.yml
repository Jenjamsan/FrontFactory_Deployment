version: "2"
services:
  sonarqube:
    image: sonarqube:9.2.1-community
    restart: always
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=v07IGCFCF83Z95NX
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonarqube
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonar.rule=Host(`sonar.frontfactory.local`)"
      - "traefik.http.routers.sonar.tls=true"
      - "traefik.http.services.sonar.loadbalancer.server.port=9000"
    depends_on:
      - sonarqube-db
    networks:
      - proxy
      - backend-sonar

  sonarqube-db:
    image: postgres:13.4
    restart: always
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=v07IGCFCF83Z95NX
      - POSTGRES_DB=sonarqube
    volumes:
      - sonarqube_db:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - backend-sonar

  lighthouse-server:
    image: nginx
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lighthouse.rule=Host(`lighthouse.frontfactory.local`)"
      - "traefik.http.routers.lighthouse.tls=true"
    volumes:
        - ./src:/usr/share/nginx/html
    networks:
        - proxy


volumes:
  postgresql_data:
  sonarqube_bundled-plugins:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_db:
  sonarqube_extensions:

networks:
  backend-sonar:
  proxy:
    external: true
